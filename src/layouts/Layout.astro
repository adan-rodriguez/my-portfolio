---
import "@fontsource-variable/onest";

import Footer from "../ui/components/Footer.astro";
import Header from "../ui/components/Header.astro";
import ButtonUp from "../ui/components/ButtonUp.astro";

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/png" href="/images/favicon.png" />
    <title>{title}</title>
    <meta
      name="description"
      content="Soy un desarrollador web junior especializado en React, Next.js y Astro. En mi portafolio encontrar치s m치s informaci칩n sobre mi y conocer치s todos mis proyectos."
    />
    <script is:inline>
      const storageTheme = localStorage.getItem("theme");

      const theme = storageTheme ?? "dark";

      document.documentElement.setAttribute("data-theme", theme);
    </script>
  </head>
  <body>
    <Header />
    <main>
      <slot />
    </main>
    <ButtonUp />
    <Footer />
  </body>
</html>

<script>
  const $root = document.documentElement;
  const $swictherTheme = document.querySelector(
    ".theme-btn"
  ) as HTMLInputElement;

  function toggleTheme() {
    const theme = $root.dataset.theme === "dark" ? "light" : "dark";
    $root.setAttribute("data-theme", theme);

    localStorage.setItem("theme", theme);
  }

  $swictherTheme.addEventListener("click", toggleTheme);

  const colorScheme = window.matchMedia("(prefers-color-scheme: dark)");

  colorScheme.addEventListener("change", (e) => {
    const theme = e.matches ? "dark" : "light";
    $root.setAttribute("data-theme", theme);
    localStorage.setItem("theme", theme);
  });
</script>

<style is:global>
  :root {
    --text-color-primary: rgb(248 250 252);
    --text-color-secondary: rgb(203 213 225);
    --color-primary: rgb(3 93 143);
    --color-secondary: rgb(55 65 81);
    --bg-color: rgb(2 6 23);
    --bg-grid-color: #ffffff1a;

    scroll-behavior: smooth;
    scrollbar-width: thin;
    scrollbar-color: var(--color-secondary) var(--bg-color);

    & #sun {
      display: none;
    }
  }

  :root[data-theme="light"] {
    --text-color-primary: rgb(2 6 23);
    --text-color-secondary: rgb(31 41 55);
    --bg-color: rgb(248 250 252);
    --bg-grid-color: #0002;

    & #sun {
      display: block;
    }

    & #moon {
      display: none;
    }
  }

  body {
    --bg-grid-size: 64px;

    font-family: "Onest Variable", sans-serif;
    color: var(--text-color-primary);
    background-color: var(--bg-color);
    background-image: radial-gradient(transparent, var(--bg-color)),
      repeating-linear-gradient(
        to bottom,
        var(--bg-grid-color) 0 1px,
        transparent 1px var(--bg-grid-size)
      ),
      repeating-linear-gradient(
        to right,
        var(--bg-grid-color) 0 1px,
        transparent 1px var(--bg-grid-size)
      );

    &:has(dialog[open]) {
      overflow-y: hidden;
    }
  }

  main {
    max-width: 58rem;
    margin: auto;
    padding: 0 1rem;
  }

  p {
    text-wrap: pretty;
  }

  input,
  textarea {
    &:focus {
      outline: none;
    }
  }

  @media (prefers-reduced-motion: reduce) {
    :root {
      scroll-behavior: auto;
    }
  }
</style>
