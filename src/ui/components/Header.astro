---
import "@fontsource/lobster";
import HamburgerIcon from "../icons/HamburgerIcon.astro";
import CloseIcon from "../icons/CloseIcon.astro";
import Sun from "../icons/Sun.astro";
import Moon from "../icons/Moon.astro";

const LINKS = [
  { label: "Proyectos", href: "projects" },
  { label: "Contáctame", href: "contact-me" },
];
---

<header>
  <div>
    <a href="/" title="Inicio">
      <h1 translate="no">
        <span aria-hidden="true">&lt;</span> Adan Rodriguez <span
          aria-hidden="true">/ &gt;</span
        ><span class="block text-xs absolute right-0 top-8"
          >Portafolio profesional</span
        >
      </h1>
    </a>
    <div class="flex items-center gap-x-3">
      <button aria-label="Cambiar tema" class="theme-btn">
        <Sun />
        <Moon />
      </button>
      <button class="flex open-btn" aria-label="Abrir menú">
        <HamburgerIcon />
      </button>
      <button class="hidden close-btn" aria-label="Cerrar menú">
        <CloseIcon />
      </button>
      <nav class="hidden menu">
        <ul>
          {
            LINKS.map(({ href, label }) => (
              <li>
                <a class="nav-link" href={`#${href}`}>
                  {label}
                </a>
              </li>
            ))
          }
        </ul>
      </nav>
    </div>
  </div>
</header>

<style>
  header {
    position: fixed;
    top: 0;
    width: 100%;
    z-index: 1;
    background-color: var(--bg-color);
    mix-blend-mode: luminosity;
    /* backdrop-filter: blur(10px); */

    > div {
      width: 100%;
      display: flex;
      justify-content: space-between;
      align-items: center;
      max-width: 58rem;
      padding: 10px 1rem;
      margin: 0 auto;

      h1 {
        font-size: 1.5rem;
        font-family: "Lobster", cursive;
        user-select: none;
        position: relative;
        top: -5px;
      }

      .open-btn {
        transition: scale 0.3s;

        &:hover {
          scale: 1.1;
        }

        &:focus-visible {
          scale: 1.1;
        }

        @media (width >= 768px) {
          display: none;
        }
      }

      .close-btn {
        position: relative;
        z-index: 100;
        transition: scale 0.3s;

        &:hover {
          scale: 1.1;
        }

        &:focus-visible {
          scale: 1.1;
        }

        @media (width >= 768px) {
          display: none;
        }
      }

      nav {
        padding: 2.5rem 0;
        position: fixed;
        top: 0;
        left: 0;
        z-index: 2;
        width: 100%;
        height: 100dvh;
        overflow-y: auto;
        scrollbar-color: var(--color-secondary), var(--bg-color);
        scrollbar-width: thin;
        background-color: var(--bg-color);

        @media (width >= 768px) {
          display: block;
          width: auto;
          height: auto;
          padding: 0;
          position: static;
        }

        ul {
          display: flex;
          flex-direction: column;
          align-items: center;
          gap: 1.25rem;

          @media (width >= 768px) {
            flex-direction: row;
          }

          a {
            &::after {
              content: "";
              display: block;
              height: 1px;
              background-color: var(--text-color-primary);
              transform: scale(0);
              transform-origin: left;
              transition: transform 0.3s;
            }
          }

          a {
            &:hover {
              &::after {
                transform: scale(1);
              }
            }
          }
        }
      }

      .theme-btn {
        transition: scale 0.3s;

        &:hover {
          scale: 1.1;
        }

        &:focus-visible {
          scale: 1.1;
        }
      }
    }
  }
</style>

<script>
  const $body = document.body;
  const $openBtn = document.querySelector(".open-btn") as HTMLElement;
  const $closeBtn = document.querySelector(".close-btn") as HTMLElement;
  const $navLinks = document.querySelectorAll(
    ".nav-link"
  ) as unknown as HTMLCollectionOf<HTMLElement>;
  const $menu = document.querySelector(".menu") as HTMLElement;

  $openBtn.addEventListener("click", () => {
    $menu.classList.replace("hidden", "block");
    $openBtn.classList.replace("flex", "hidden");
    $closeBtn.classList.replace("hidden", "flex");
    $body.classList.add("overflow-y-hidden");
  });

  $closeBtn.addEventListener("click", () => {
    $menu.classList.replace("block", "hidden");
    $openBtn.classList.replace("hidden", "flex");
    $closeBtn.classList.replace("flex", "hidden");
    $body.classList.remove("overflow-y-hidden");
  });

  for (const $navLink of $navLinks) {
    $navLink.addEventListener("click", () => {
      if ($menu.matches(".block")) {
        $menu.classList.replace("block", "hidden");
        $openBtn.classList.replace("hidden", "flex");
        $closeBtn.classList.replace("flex", "hidden");
        $body.classList.remove("overflow-y-hidden");
      }
    });
  }

  const widthQuery = window.matchMedia("(width >= 768px)");

  widthQuery.addEventListener("change", (e) => {
    if (e.matches && $menu.matches(".block")) {
      $body.classList.remove("overflow-y-hidden");
      return;
    }

    if (!e.matches && $menu.matches(".block")) {
      $body.classList.add("overflow-y-hidden");
    }
  });
</script>
