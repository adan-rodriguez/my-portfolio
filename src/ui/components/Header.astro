---
import HamburgerIcon from "../icons/HamburgerIcon.astro";
import CloseIcon from "../icons/CloseIcon.astro";
import ThemeButton from "./ThemeButton.astro";

const LINKS = [
  { label: "Proyectos", href: "projects" },
  // { label: "Contáctame", href: "contact-me" },
];
---

<header class="main-header">
  <div>
    <a
      id="logo-link"
      href="/"
      aria-label="Link que lleva a la página principal"
    >
      <h1>
        <span aria-hidden="true">&lt;</span> Adan Rodriguez <span
          aria-hidden="true">/ &gt;</span
        ><span class="block text-xs absolute right-0 top-8"
          >Portafolio profesional</span
        >
      </h1>
    </a>
    <ThemeButton />
    <button
      id="menu-btn"
      aria-label="Abrir menú"
      aria-expanded="false"
      aria-controls="menu"
    >
      <HamburgerIcon />
      <CloseIcon id="close-menu-icon" />
    </button>
    <nav id="menu">
      <ul>
        {
          LINKS.map(({ href, label }) => (
            <li>
              <a class="nav-link" href={`/#${href}`}>
                {label}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>
  </div>
</header>

<script>
  const $menuBtn = document.querySelector("#menu-btn") as HTMLElement;
  const $navLinks = document.querySelectorAll(
    ".nav-link"
  ) as unknown as HTMLCollectionOf<HTMLElement>;
  const $menu = document.querySelector("#menu") as HTMLElement;

  const focusableElementsString =
    'a, button, input, textarea, select, details, [tabindex]:not([tabindex="-1"])';
  const $$focusableElements = $menu.querySelectorAll(focusableElementsString);

  const $lastFocusableElement =
    $$focusableElements[$$focusableElements.length - 1];

  function trapFocus(e) {
    if (e.key === "Tab") {
      const $focusedElement = document.activeElement;
      if (e.shiftKey) {
        if ($focusedElement === $menuBtn) {
          e.preventDefault();
          $lastFocusableElement.focus();
        }
      } else {
        if ($focusedElement === $lastFocusableElement) {
          e.preventDefault();
          $menuBtn.focus();
        }
      }
    }
  }

  let mq = window.matchMedia("(width >= 768px)");

  function showMenu() {
    $menuBtn.setAttribute("aria-expanded", "true");
    $menuBtn.setAttribute("aria-label", "Cerrar menú");
    window.scrollTo({ top: 0, behavior: "smooth" });
    document.addEventListener("keydown", trapFocus);
    mq.addEventListener("change", hideMenu);
  }

  function hideMenu() {
    $menuBtn.setAttribute("aria-expanded", "false");
    $menuBtn.setAttribute("aria-label", "Abrir menú");
    document.removeEventListener("keydown", trapFocus);
    mq.removeEventListener("change", hideMenu);
  }

  function handleMenu() {
    if ($menuBtn.matches("[aria-expanded='false']")) {
      showMenu();
    } else {
      hideMenu();
    }
  }

  $menuBtn.addEventListener("click", handleMenu);

  for (const $navLink of $navLinks) {
    $navLink.addEventListener("click", () => {
      if ($menuBtn.matches("[aria-expanded='true']")) hideMenu();
    });
  }
</script>
