---
import Badge from "./Badge.astro";
import LinkIcon from "../icons/LinkIcon.astro";
import GitHubIcon from "../icons/GitHubIcon.astro";

const { name, description, image, favicon, technologies, link, github } =
  Astro.props;
---

<li>
  <article class="important-card card shadow-lg shadow-black">
    <div class="card__image_container">
      <img
        class="card__image"
        src={`/images/${image}`}
        alt={`Portada de ${name}`}
      />
    </div>
    <div class="card__info">
      <div class="card__info_header">
        <div class="card__title">
          <img
            src={`/images/favicons/${favicon}`}
            alt={`Favicon de ${name}`}
            width="24px"
            height="24px"
          />
          <h3 class="card__name">{name}</h3>
        </div>
        <ul
          class="card__badges"
          aria-label="Tecnologías utilizadas en el proyecto"
        >
          {
            technologies.map(({ name, image, color }) => (
              <Badge name={name} image={image} color={color} />
            ))
          }
        </ul>
        <p class="card__description">{description}</p>
      </div>
      <div class="card__buttons">
        <a
          href={link}
          target="_blank"
          rel="noopener noreferrer"
          class="card__button"
        >
          <LinkIcon /> Deploy</a
        >
        {
          github && (
            <a
              href="https://github.com/adan-rodriguez/el-villanense-next-js"
              target="_blank"
              rel="noopener noreferrer"
              class="card__button text-"
            >
              <GitHubIcon width="16" height="16" />
              Código
            </a>
          )
        }
      </div>
    </div>
  </article>
</li>

<style>
  /* @supports (animation-timeline: view(20%)) {
    li {
      animation: slide-in ease-out forwards;
      animation-timeline: scroll(self cover 100% 0%);
      opacity: 0;
      transform: translateY(50px);
    }
  }

  @keyframes slide-in {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  } */

  li {
    --text-color-primary: rgb(248 250 252);
    --text-color-secondary: rgb(203 213 225);

    width: 100%;
  }

  .card {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    border-radius: 1rem;
    overflow: clip;
    overflow-clip-margin: 3px;
    position: relative;
    background-color: var(--color-secondary);
    transition: transform 0.1s;

    &::after {
      content: "";
      display: none;
      position: absolute;
      inset: -1000%;
      background-image: conic-gradient(
        from 90deg at 50% 50%,
        #0369a1 0%,
        #000000 50%,
        #0369a1 100%
      );
      animation: spin 2s linear infinite;
      z-index: -10;
    }

    @keyframes spin {
      to {
        transform: rotate(360deg);
      }
    }

    &:hover {
      .card__image {
        scale: 1.05;
      }

      &:after {
        display: block;
      }
    }

    &:focus-within {
      overflow-clip-margin: 3px;

      .card__image {
        scale: 1.05;
      }

      &:after {
        display: block;
      }
    }

    @media (width >= 576px) {
      flex-direction: row;
    }
  }

  .card__image_container {
    width: 100%;
    aspect-ratio: 3/2;
    overflow: hidden;
    align-self: stretch;
    border-radius: 1rem 1rem 0 0;
  }

  .card__image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: left;
    transition: scale 0.5s;
  }

  @media (width >= 576px) {
    .card__image_container {
      width: 50%;
      border-radius: 1rem 0 0 1rem;
    }
  }

  .card__info {
    width: 100%;
    padding: 1rem;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    row-gap: 20px;
    background-image: url(/images/noise-dark.webp),
      linear-gradient(to top, black, var(--color-secondary));
    background-blend-mode: soft-light;
    align-self: stretch;
    border-radius: 0 0 1rem 1rem;
  }

  @media (width >= 576px) {
    .card__info {
      width: 50%;
      background-image: url(/images/noise-dark.webp),
        linear-gradient(to left, black, var(--color-secondary));
      border-radius: 0 1rem 1rem 0;
    }
  }

  .card__info_header {
    display: flex;
    flex-direction: column;
    row-gap: 1rem;
  }

  .card__title {
    display: flex;
    column-gap: 0.5rem;
    align-items: center;
  }

  .card__name {
    font-size: 1.5rem;
    font-weight: 700;
    text-wrap: balance;
    line-height: normal;
    color: var(--text-color-primary);
  }

  .card__badges {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
  }

  .card__description {
    font-size: 0.875rem;
    color: var(--text-color-secondary);
    text-wrap: pretty;
  }

  .card__buttons {
    display: flex;
  }

  .card__button {
    display: flex;
    align-items: center;
    column-gap: 0.25rem;
    padding: 0.25rem 1.25rem;
    border: 1px solid var(--text-color-primary);
    border-radius: 0.25rem;
    background-color: var(--color-secondary);
    color: var(--text-color-primary);
    transition:
      background-color 0.3s,
      scale 0.3s,
      translate 0s;
    font-size: 0.875rem;

    &:hover {
      background-color: var(--color-primary);
      scale: 1.05;
    }

    &:focus-visible {
      background-color: var(--color-primary);
      scale: 1.05;
    }

    &:active {
      translate: 0 0.125rem;
    }
  }
</style>

<script>
  const $$cards = document.querySelectorAll(
    ".important-card"
  ) as NodeListOf<HTMLElement>;

  $$cards.forEach(($card) => {
    $card.addEventListener("mousemove", (e) => {
      const { layerX, layerY, target } = e;
      const { clientWidth, clientHeight } = target.closest("article");

      const yRotation = ((layerX - clientWidth / 2) / clientWidth) * 2;
      const xRotation = ((layerY - clientHeight / 2) / clientHeight) * 2;

      $card.style.transform = `perspective(500px) scale(1.01) rotateX(${-xRotation}deg) rotateY(${yRotation}deg)`;
    });
  });

  $$cards.forEach(($card) => {
    $card.addEventListener("mouseleave", () => {
      $card.style.transform =
        "perspective(500px) scale(1) rotateX(0) rotateY(0)";
    });
  });
</script>
